generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"] // works for local + Render
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* -------------------------------------------------------------------------- */
/*                                  MODELS                                    */
/* -------------------------------------------------------------------------- */

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  passwordHash      String
  name              String?
  isVerified        Boolean   @default(false)
  verificationToken String?
  verificationExp   DateTime?
  role              Role      @default(USER)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  // âœ… Relations
  entries           Entry[]   @relation("UserEntries")
  passwordResetToken PasswordResetToken? // relation for OTP password resets
}

/* -------------------------------------------------------------------------- */
/*                               PASSWORD RESET                               */
/* -------------------------------------------------------------------------- */

model PasswordResetToken {
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String
  expiresAt DateTime
}

/* -------------------------------------------------------------------------- */
/*                                   ENTRIES                                  */
/* -------------------------------------------------------------------------- */

model Entry {
  id          Int       @id @default(autoincrement())
  userId      Int
  user        User      @relation("UserEntries", fields: [userId], references: [id], onDelete: Cascade)
  
  title       String
  type        EntryType
  director    String?
  budget      String?
  location    String?
  durationMin String?
  year        Int?
  details     String?
  posterPath  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

/* -------------------------------------------------------------------------- */
/*                                   ENUMS                                    */
/* -------------------------------------------------------------------------- */

enum Role {
  USER
  ADMIN
}

enum EntryType {
  MOVIE
  TV_SHOW
}
